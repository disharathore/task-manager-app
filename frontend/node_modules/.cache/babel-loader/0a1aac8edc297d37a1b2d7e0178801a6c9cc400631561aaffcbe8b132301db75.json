{"ast":null,"code":"var _jsxFileName = \"/Users/disha/Desktop/task-manager-app/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [msg, setMsg] = useState('');\n  const fetchTasks = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.get(`${process.env.REACT_APP_API}/api/tasks`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks(res.data);\n    } catch (err) {\n      setMsg('Failed to fetch tasks');\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 500,\n      margin: 'auto',\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"C/IXG6j+1MUB8DXRdjrwKTZOqYc=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","msg","setMsg","fetchTasks","token","localStorage","getItem","res","get","process","env","REACT_APP_API","headers","Authorization","data","err","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","title","description","_id","_c","$RefreshReg$"],"sources":["/Users/disha/Desktop/task-manager-app/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function Dashboard() {\n  const [tasks, setTasks] = useState([]);\n  const [msg, setMsg] = useState('');\n\n  const fetchTasks = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.get(`${process.env.REACT_APP_API}/api/tasks`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setTasks(res.data);\n    } catch (err) {\n      setMsg('Failed to fetch tasks');\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  return (\n    <div style={{ maxWidth: 500, margin: 'auto', padding: 20 }}>\n      <h2>My Tasks</h2>\n      {msg && <p>{msg}</p>}\n      {tasks.length === 0 ? (\n        <p>No tasks yet.</p>\n      ) : (\n        <ul>\n          {tasks.map((task) => (\n            <li key={task._id}>\n              <strong>{task.title}</strong><br />\n              <small>{task.description}</small>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa,YAAY,EAAE;QACpEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUT,KAAK;QAChC;MACF,CAAC,CAAC;MACFJ,QAAQ,CAACO,GAAG,CAACO,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZb,MAAM,CAAC,uBAAuB,CAAC;IACjC;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdW,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKoB,KAAK,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBACzDxB,OAAA;MAAAwB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBvB,GAAG,iBAAIL,OAAA;MAAAwB,QAAA,EAAInB;IAAG;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBzB,KAAK,CAAC0B,MAAM,KAAK,CAAC,gBACjB7B,OAAA;MAAAwB,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEpB5B,OAAA;MAAAwB,QAAA,EACGrB,KAAK,CAAC2B,GAAG,CAAEC,IAAI,iBACd/B,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAAwB,QAAA,EAASO,IAAI,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAAA5B,OAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnC5B,OAAA;UAAAwB,QAAA,EAAQO,IAAI,CAACE;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF1BG,IAAI,CAACG,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CAxCuBD,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}